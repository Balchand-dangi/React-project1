{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","style","display","bgPink","bgYellow","bgAqua","TextForm","text","setText","useState","color","heading","backgroundColor","value","placeholder","onChange","event","target","rows","handleUpClick","newText","showAlert","checkLength","length","toLowerclick","newtext","clearText","split","prototypes","PropTypes","string","isRequired","about","App","setMode","setAlert","message","setTimeout","setColor","Fragment","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5404d1bc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = ((word)=>{\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    })\r\n    return (\r\n\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>  {props.alert.msg} </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\" >\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n\r\n          <div className={`form-check form-switch text-${props.mode==='light' ? 'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n\r\n              <div className=\"multiColor\"   style={{display: props.mode==='light'?'none':'block'}}>\r\n                <button className='btn btn-primary mx-1 my-3' onClick={props.bgPink}>Dark Red Mode</button> \r\n                <button className='btn btn-primary mx-1 my-3' onClick={props.bgYellow}>Teal Mode</button> \r\n                <button className='btn btn-primary mx-1 my-3' onClick={props.bgAqua}>Dark Purple Mode</button> \r\n              </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.prototypes = {\r\n    title : PropTypes.string.isRequired,\r\n    about : PropTypes.string.isRequired\r\n}\r\n\r\n\r\n// if I don't provide prop so defaultProps automaticly will be call \r\n// Navbar.defaultProps = {\r\n//     title : 'set title here',\r\n//     about : 'set about here',\r\n// }","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = () => {\r\n        // console.log(\"button was clicked: \" + text)\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert(\"Text has been change into UpperCase\",\"success\")\r\n    }\r\n\r\n    const checkLength = () => {\r\n        let newText = text.length\r\n        setText(\"Length of your text is: \" + newText)\r\n        props.showAlert(\"Length checked\",\"success\")\r\n    }\r\n\r\n    const toLowerclick = () => {\r\n        let newtext = text.toLowerCase()\r\n        setText(newtext);\r\n        props.showAlert(\"Text has been change into LowerCase\",\"success\")\r\n    }\r\n\r\n    const clearText = () => {\r\n        let newtext = \"\"\r\n        setText(newtext)\r\n        props.showAlert(\"Text has been cleared\",\"success\")\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        // console.log(\"onchange\")\r\n        setText(event.target.value);\r\n    };\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container my-3\" style={{color: props.mode === \"dark\"?'white':'black'}}>\r\n                <h3>{props.heading}</h3>\r\n                <textarea className=\"form-control\" style={{backgroundColor: props.mode==='dark'?'#044':'white',color:props.mode === \"dark\"?'white':'black'}} value={text} placeholder='Enter text here' onChange={handleChange} id=\"textBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className='btn btn-primary my-3 mx-5' onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className='btn btn-primary ' onClick={checkLength}>check length</button>\r\n            <button className='btn btn-primary mx-5 ' onClick={toLowerclick}>Convert to Lowercase</button>\r\n            <button className='btn btn-primary  5' onClick={clearText}>Clear Text</button>\r\n\r\n        <div className=\"container\"  style={{color: props.mode === \"dark\"?'white':'black'}}>\r\n            <h3>text summary</h3>\r\n            <p>{text.split(' ').length} <b>words</b> and {text.length} <b>characters</b></p>\r\n        </div>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react';\n\nimport './App.css';\nimport Alert from './components/Alert.js';\nimport Navbar from './components/Navbar.js';\nimport TextForm from './components/TextForm.js';\n// import About from './components/About.js';\nimport { useState } from 'react';\n\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode]  = useState('light')   // whether dark mode os enable or not\n  const [alert, setAlert] = useState(null)\n  \n\n  const toggleMode = () => {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743'\n      showAlert(\": Dark mode has been activated\",\"success\");\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\": Light mode has been activated\",\"success\");\n    }\n  }\n\n  const showAlert =  ((message, type) =>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  });\n \n  const [color, setColor] = useState(mode)\n  const bgPink = () =>{\n    setColor('#8B0000')\n    document.body.style.backgroundColor = \"#8B0000\"\n  } \n  const bgYellow = () =>{\n     setColor('#008080')\n    document.body.style.backgroundColor = \"#008080\"\n  } \n  const bgAqua = () =>{\n     setColor('#4B0082')\n    document.body.style.backgroundColor = \"#4B0082\"\n  } \n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" about=\"About Us\" mode={mode} color={color} toggleMode={toggleMode}  bgPink={bgPink} bgYellow={bgYellow} bgAqua={bgAqua}/> \n      <Alert  alert={alert}/>\n     \n      <div className=\"container\">\n    \n      {/* <Routes>\n        <Route exact path=\"/about\" element={<About />} />   \n        <Route exact path=\"/\" element={<TextForm heading=\"Enter the text to analyze below\" mode={mode} showAlert={showAlert} />} />\n      </Routes> */}\n      <TextForm heading=\"Enter the text to analyze below\" mode={mode}   showAlert={showAlert}/>                                                    \n      </div>\n      {/* </Router> */}\n\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals.js';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}